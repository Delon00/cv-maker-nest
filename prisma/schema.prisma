// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  firstName  String?
  lastName   String?
  plan       String   @default("free")
  cvs        Cv[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Cv {
  id          String         @id @default(uuid())
  userId      String
  title       String?
  linkedIn    String?
  website     String?
  templateId  String
  data        Json
  user        User           @relation(fields: [userId], references: [id])
  template    Template       @relation(fields: [templateId], references: [id])
  educations  Education[]
  experiences Experience[]
  skills      Skill[]
  languages   Language[]   
  interests   Interest[]    
  certifications Certification[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}


model Template {
  id          String    @id @default(uuid())
  name        String
  description String?
  couleur     String?
  previewUrl  String?
  cvs         Cv[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Education {
  id        String   @id @default(uuid())
  cvId      String
  school    String?
  location    String?
  field     String?
  startDate DateTime?
  endDate   DateTime?
  cv        Cv       @relation(fields: [cvId], references: [id])
}

model Experience {
  id          String     @id @default(uuid())
  cvId        String
  company     String?
  location    String?
  jobTitle    String?
  description String?
  startDate   DateTime?
  endDate     DateTime?
  cv          Cv         @relation(fields: [cvId], references: [id])
  missions    Mission[]
}


model Mission {
  id           String     @id @default(uuid())
  experienceId String
  description  String     
  experience   Experience @relation(fields: [experienceId], references: [id])
}


model Skill {
  id   String   @id @default(uuid())
  cvId String
  name String
  cv   Cv       @relation(fields: [cvId], references: [id])
}


model Language {
  id       String  @id @default(uuid())
  cvId     String
  name     String  
  level    String? 
  cv       Cv      @relation(fields: [cvId], references: [id])
}

model Interest {
  id       String  @id @default(uuid())
  cvId     String
  name     String 
  cv       Cv      @relation(fields: [cvId], references: [id])
}

model Certification {
  id          String   @id @default(uuid())
  cvId        String
  title       String   
  institution String?  
  date        DateTime? 
  cv          Cv       @relation(fields: [cvId], references: [id])
}
